import React, { useState, useEffect } from 'react';
import Modal from 'react-modal';

const customStyles = {
    overlay: {
        zIndex: 9999, // üëà ƒë·∫£m b·∫£o n·ªïi b·∫≠t h∆°n m·ªçi ph·∫ßn kh√°c
        backgroundColor: 'rgba(0, 0, 0, 0.5)'
    },
    content: {
        top: '50%',
        left: '50%',
        right: 'auto',
        bottom: 'auto',
        marginRight: '-50%',
        transform: 'translate(-50%, -50%)',
        width: '600px',
        maxHeight: '90vh',
        overflowY: 'auto',
        borderRadius: '10px',
        padding: '20px',
        zIndex: 10000 // üëà th√™m n·∫øu mu·ªën ch·∫Øc ch·∫Øn
    }
};

Modal.setAppElement('#root');

function LeaveRequestFormModal({ isOpen, onClose, onSubmit }) {
    const [formData, setFormData] = useState({
        loaiPhep: 'PhepNam',
        lyDo: '',
        ngayTu: '',
        ngayDen: '',
        gioTu: '', // <-- Th√™m tr∆∞·ªùng m·ªõi
        gioDen: '', // <-- Th√™m tr∆∞·ªùng m·ªõi
        congViecBanGiao: ''
    });
    const [isSubmitting, setIsSubmitting] = useState(false);
    const handleChange = (e) => {
        const { name, value } = e.target;

        // T·∫°o m·ªôt b·∫£n sao c·ªßa formData ƒë·ªÉ c·∫≠p nh·∫≠t
        let newFormData = { ...formData, [name]: value };

        // === LOGIC M·ªöI: T·ª∞ ƒê·ªòNG ƒêI·ªÄN "ƒê·∫æN GI·ªú" ===
        if (name === 'gioTu') {
            switch (value) {
                case '08:00':
                    newFormData.gioDen = '17:00';
                    break;
                case '08:30':
                    newFormData.gioDen = '17:30';
                    break;
                case '09:00':
                    newFormData.gioDen = '18:00';
                    break;
                default:
                    // N·∫øu ch·ªçn gi·ªù kh√°c, c√≥ th·ªÉ x√≥a tr·ªëng √¥ "ƒê·∫øn gi·ªù"
                    newFormData.gioDen = '';
                    break;
            }
        }
        // C·∫≠p nh·∫≠t state v·ªõi d·ªØ li·ªáu m·ªõi
        setFormData(newFormData);
    };

    const handleSubmit = (e) => {
        e.preventDefault();
        // K·∫øt h·ª£p ng√†y v√† gi·ªù tr∆∞·ªõc khi g·ª≠i ƒëi n·∫øu c·∫ßn
        const submissionData = {
            ...formData,
            ngayTu: `${formData.ngayTu}T${formData.gioTu || '00:00'}:00`,
            ngayDen: `${formData.ngayDen}T${formData.gioDen || '00:00'}:00`
        };
        onSubmit(submissionData);
    };

    return (
        <Modal
            isOpen={isOpen}
            onRequestClose={onClose}
            style={customStyles}
            contentLabel="Form ƒê∆°n Xin Ph√©p"
        >
            <h4 className="mb-3">T·∫°o ƒê∆°n Xin Ngh·ªâ Ph√©p</h4>
            <form onSubmit={handleSubmit}>
                <div className="mb-3">
                    <label htmlFor="loaiPhep" className="form-label">Lo·∫°i ph√©p</label>
                    <select
                        id="loaiPhep"
                        name="loaiPhep"
                        className="form-select"
                        value={formData.loaiPhep}
                        onChange={handleChange}
                    >
                        <option value="PhepNam">Ph√©p NƒÉm</option>
                        <option value="PhepBenh">Ph√©p B·ªánh</option>
                        <option value="NghiKhongLuong">Ngh·ªâ Kh√¥ng L∆∞∆°ng</option>
                        <option value="NghiCheDo">Ngh·ªâ Ch·∫ø ƒê·ªô</option>
                    </select>
                </div>

                <div className="row mb-3">
                    <div className="col">
                        <label htmlFor="ngayTu" className="form-label">T·ª´ ng√†y</label>
                        <input type="date" id="ngayTu" name="ngayTu" className="form-control" value={formData.ngayTu} onChange={handleChange} required />
                    </div>
                    <div className="col">
                        <label htmlFor="ngayDen" className="form-label">ƒê·∫øn ng√†y</label>
                        <input type="date" id="ngayDen" name="ngayDen" className="form-control" value={formData.ngayDen} onChange={handleChange} required />
                    </div>
                </div>

                {/* TH√äM KH·ªêI N√ÄY V√ÄO */}
                <div className="row mb-3">
                    <div className="col">
                        <label htmlFor="gioTu" className="form-label">T·ª´ gi·ªù</label>
                        {/* Thay input text b·∫±ng select ƒë·ªÉ gi·ªõi h·∫°n l·ª±a ch·ªçn */}
                        <select
                            id="gioTu"
                            name="gioTu"
                            className="form-select"
                            value={formData.gioTu}
                            onChange={handleChange}
                        >
                            <option value="">-- Ch·ªçn gi·ªù --</option>
                            <option value="08:00">08:00</option>
                            <option value="08:30">08:30</option>
                            <option value="09:00">09:00</option>
                        </select>
                    </div>
                    <div className="col">
                        <label htmlFor="gioDen" className="form-label">ƒê·∫øn gi·ªù</label>
                        <input
                            type="text"
                            id="gioDen"
                            name="gioDen"
                            className="form-control"
                            value={formData.gioDen}
                            readOnly // Ng∆∞·ªùi d√πng kh√¥ng th·ªÉ s·ª≠a
                            title="Gi·ªù k·∫øt th√∫c ƒë∆∞·ª£c t√≠nh t·ª± ƒë·ªông"
                        />
                    </div>
                </div>

                <div className="mb-3">
                    <label htmlFor="lyDo" className="form-label">L√Ω do</label>
                    <textarea id="lyDo" name="lyDo" className="form-control" rows="3" value={formData.lyDo} onChange={handleChange} required></textarea>
                </div>

                <div className="mb-3">
                    <label htmlFor="congViecBanGiao" className="form-label">C√¥ng vi·ªác b√†n giao (n·∫øu c√≥)</label>
                    <textarea id="congViecBanGiao" name="congViecBanGiao" className="form-control" rows="3" value={formData.congViecBanGiao} onChange={handleChange}></textarea>
                </div>

                <div className="d-flex justify-content-end gap-2">
                    <button type="button" className="btn btn-secondary" onClick={onClose} disabled={isSubmitting}>H·ªßy</button>
                    <button type="submit" className="btn btn-primary" disabled={isSubmitting}>
                        {isSubmitting ? (
                            <>
                                <span className="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span className="ms-1">ƒêang g·ª≠i...</span>
                            </>
                        ) : (
                            'G·ª≠i ƒê∆°n'
                        )}
                    </button>
                </div>
            </form>
        </Modal>
    );
}

export default LeaveRequestFormModal;